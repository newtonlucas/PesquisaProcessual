name: Build and Deploy Backend Container

on:
  push:
    paths:
      - 'backend/**'
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image to GHCR
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/pesquisaprocessual-backend:${{ github.sha }}

  deploy-to-azure:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ secrets.AZURE_CREDENTIALS }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Optional - Push to ACR
        if: ${{ secrets.ACR_LOGIN_SERVER && secrets.ACR_NAME }}
        run: |
          IMAGE_GHCR=ghcr.io/${{ github.repository_owner }}/pesquisaprocessual-backend:${{ github.sha }}
          ACR_IMAGE=${{ secrets.ACR_LOGIN_SERVER }}/pesquisaprocessual-backend:${{ github.sha }}
          docker pull $IMAGE_GHCR
          docker tag $IMAGE_GHCR $ACR_IMAGE
          echo "Logging in to ACR: ${{ secrets.ACR_NAME }}"
          az acr login --name ${{ secrets.ACR_NAME }}
          docker push $ACR_IMAGE

      - name: Deploy to App Service (configure container)
        env:
          IMAGE_GHCR: ghcr.io/${{ github.repository_owner }}/pesquisaprocessual-backend:${{ github.sha }}
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
          WEBAPP_NAME: ${{ secrets.WEBAPP_NAME }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          # Prefer ACR image if ACR_LOGIN_SERVER is set (we pushed it above)
          if [ -n "$ACR_LOGIN_SERVER" ]; then
            IMAGE="$ACR_LOGIN_SERVER/pesquisaprocessual-backend:${{ github.sha }}"
            REGISTRY_URL="https://$ACR_LOGIN_SERVER"
            REGISTRY_USER="$REGISTRY_USERNAME"
            REGISTRY_PASS="$REGISTRY_PASSWORD"
          else
            IMAGE="$IMAGE_GHCR"
            REGISTRY_URL="https://ghcr.io"
            # For GHCR the App Service needs credentials; you can use a GitHub PAT with packages:read
            REGISTRY_USER="${{ github.repository_owner }}"
            REGISTRY_PASS="${{ secrets.GHCR_PAT }}"
          fi

          echo "Setting container for webapp $WEBAPP_NAME to image $IMAGE"
          az webapp config container set --name "$WEBAPP_NAME" --resource-group "$RESOURCE_GROUP" --docker-custom-image-name "$IMAGE" --docker-registry-server-url "$REGISTRY_URL" --docker-registry-server-user "$REGISTRY_USER" --docker-registry-server-password "$REGISTRY_PASS"

      - name: Restart Web App
        run: |
          az webapp restart --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }}

# Required secrets (add these in GitHub repository Settings > Secrets):
# - AZURE_CREDENTIALS (JSON for azure/login)
# - WEBAPP_NAME
# - RESOURCE_GROUP
# Optional for ACR push/deploy:
# - ACR_NAME
# - ACR_LOGIN_SERVER (e.g. myregistry.azurecr.io)
# - REGISTRY_USERNAME (if needed for ACR)
# - REGISTRY_PASSWORD (if needed for ACR)
# Optional for GHCR -> App Service pull:
# - GHCR_PAT (personal access token with packages:read)
